import calendar
import random

#rate
HOURLY_RATE = 20  # $20/hour

def schedule_generation(staff, year, month):
    #shifts
    shifts = ["7:00AM - 1:00PM", "1:00PM - 7:00PM"]

    #number of days
    day_count = calendar.monthrange(year, month)[1]

    #shift assignment
    schedule = {}
    for day in range(1, day_count + 1):
        schedule[day] = {
            shifts[0]: random.choice(staff), 
            shifts[1]: random.choice(staff)
        }

    return schedule

def display_schedule_as_html(schedule, year, month):
    #calander
    cal = calendar.HTMLCalendar()
    html_calendar = cal.formatmonth(year, month)

    #put the shifts in calandar
    html_calendar = html_calendar.replace(
        "<table", '<table border="1" cellpadding="5" cellspacing="0"'
    )
    for day, shifts in schedule.items():
        shift_info = "<br>".join(f"{time}: {person}" for time, person in shifts.items())
        html_calendar = html_calendar.replace(
            f'>{day}<',
            f' bgcolor="#FFD700">{day}<br>{shift_info}<'
        )

    # write html to file
    with open("schedule.html", "w") as file:
        file.write(html_calendar)

    print("Schedule has been successfully saved as 'schedule.html'!")

def calculate_payment(schedule, staff, hours_per_shift=6):
    #payment dictionary
    payments = {person: 0 for person in staff}
    total_weekly_hours = 0

    #calculate hours and pay
    for day_shifts in schedule.values():
        for shift, person in day_shifts.items():
            payments[person] += hours_per_shift
            total_weekly_hours += hours_per_shift

    #gross weekly pay and monthly estimate
    weekly_gross_pay = {person: payments[person] * HOURLY_RATE for person in payments}
    total_weekly_gross = sum(weekly_gross_pay.values())
    total_monthly_gross = total_weekly_gross * 4  # Approximate 4 weeks in a month

    #report
    report = "Caregiver Weekly Payment Report\n"
    report += "--------------------------------\n"
    for person, pay in weekly_gross_pay.items():
        report += f"{person}: ${pay:.2f} (Weekly Hours: {payments[person]})\n"
    report += "--------------------------------\n"
    report += f"Total Weekly Gross Pay: ${total_weekly_gross:.2f}\n"
    report += f"Projected Monthly Gross Pay: ${total_monthly_gross:.2f}\n"

    # write report to text file
    with open("payment_report.txt", "w") as file:
        file.write(report)

    print("Payment report has been successfully generated and saved as 'payment_report.txt'!")

#run code
staff = ["Emily", "Jaylen", "Andrew", "Scott", "Ammanda", "Joe", "Daryll"]

year = int(input("Enter the year: "))
month = int(input("Enter the month (1-12): "))

schedule = schedule_generation(staff, year, month)

display_schedule_as_html(schedule, year, month)

calculate_payment(schedule, staff)
