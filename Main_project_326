import calendar
import random

def schedule_generation(staff, year, month):
    #define shifts
    shifts = ["7:00AM - 1:00PM", "1:00PM - 7:00PM"]

    #get number of days
    day_count = calendar.monthrange(year, month)[1]

    #shift assignment
    schedule = {}
    for day in range(1, day_count + 1):
        schedule[day] = {
            shifts[0]: random.choice(staff), 
            shifts[1]: random.choice(staff)  
        }

    return schedule
import calendar

def display_schedule_as_html(schedule, year, month):
    # Generate CSS styles
    def get_css_styles():
        return """
        <style>
            table {
                border-collapse: collapse;
                width: 100%;
                margin: 20px 0;
            }
            th, td {
                border: 1px solid black;
                padding: 10px;
                text-align: center;
            }
            th {
                background-color: #f2f2f2;
            }
            td {
                height: 100px;
                vertical-align: top;
            }
        </style>
        """

    # Generate HTML head
    def get_html_head():
        return f"""
        <head>
            <title>Work Schedule for {calendar.month_name[month]} {year}</title>
            {get_css_styles()}
        </head>
        """

    # Generate the table header
    def get_table_header():
        return """
        <table>
            <tr>
                <th>Mon</th>
                <th>Tue</th>
                <th>Wed</th>
                <th>Thu</th>
                <th>Fri</th>
                <th>Sat</th>
                <th>Sun</th>
            </tr>
        """

    # Generate the table rows for the schedule
    def get_table_rows(schedule, year, month):
        first_weekday, num_days = calendar.monthrange(year, month)
        current_day = 1
        html_rows = ""

        # Calculate rows for the month
        for week in range((num_days + first_weekday) // 7 + 1):
            html_rows += "<tr>"
            for day in range(7):
                if (week == 0 and day < first_weekday) or current_day > num_days:
                    html_rows += "<td></td>"  # Empty cell
                else:
                    shifts_for_day = schedule.get(current_day, {})
                    morning_shift = shifts_for_day.get("7:00AM - 1:00PM", "N/A")
                    afternoon_shift = shifts_for_day.get("1:00PM - 7:00PM", "N/A")

                    html_rows += f"""
                    <td>
                        {current_day}<br>
                        <b>AM:</b> {morning_shift}<br>
                        <b>PM:</b> {afternoon_shift}
                    </td>
                    """
                    current_day += 1
            html_rows += "</tr>"
        return html_rows

    # Generate the complete HTML
    html_schedule = f"""
    <html>
        {get_html_head()}
        <body>
            <h1>Work Schedule for {calendar.month_name[month]} {year}</h1>
            {get_table_header()}
            {get_table_rows(schedule, year, month)}
            </table>
        </body>
    </html>
    """

    # Write the HTML content to a file
    file_name = f"work_schedule_{year}_{month}.html"
    with open(file_name, "w") as file:
        file.write(html_schedule)

    print(f"HTML work schedule for {calendar.month_name[month]} {year} generated successfully!")

# Sample list of people to assign
staff = ["Alice", "Bob", "Charlie", "David", "Eve", "Frank", "Grace"]

# Get user input for the year and month
year = int(input("Enter the year: "))
month = int(input("Enter the month (1-12): "))

# Generate the work schedule
schedule = schedule_generation(staff, year, month)

# Display the schedule as an HTML calendar
display_schedule_as_html(schedule, year, month)







import calendar

# Options for availability status
AVAILABILITY_OPTIONS = ["preferred", "available", "unavailable"]

# Function to create a default schedule where all shifts are marked as "available"
def create_default_schedule():
    schedule = {}
    for day in range(1, 8):  # Days of the week (Monday to Sunday)
        schedule[day] = {
            "7:00AM - 1:00PM": "available",
            "1:00PM - 7:00PM": "available"
        }
    return schedule

# Function to update the schedule based on user input
def update_schedule(schedule):
    day_names = list(calendar.day_name)  # ['Monday', 'Tuesday', ...]

    for day in range(1, 8):
        print(f"\nSet availability for {day_names[day - 1]}:")

        # Update the morning shift availability
        morning_shift = input("Morning shift (7:00AM - 1:00PM): Enter 'preferred', 'available', or 'unavailable' (default: 'available'): ").strip().lower()
        if morning_shift in AVAILABILITY_OPTIONS:
            schedule[day]["7:00AM - 1:00PM"] = morning_shift

        # Update the afternoon shift availability
        afternoon_shift = input("Afternoon shift (1:00PM - 7:00PM): Enter 'preferred', 'available', or 'unavailable' (default: 'available'): ").strip().lower()
        if afternoon_shift in AVAILABILITY_OPTIONS:
            schedule[day]["1:00PM - 7:00PM"] = afternoon_shift

    return schedule

# Function to generate and save the schedule as an HTML table
def save_schedule_as_html(schedule):
    # HTML structure
    html_schedule = """
    <html>
    <head>
        <title>Shift Availability Schedule</title>
        <style>
            table {
                border-collapse: collapse;
                width: 100%;
                margin: 20px 0;
            }
            th, td {
                border: 1px solid black;
                padding: 10px;
                text-align: center;
            }
            th {
                background-color: #f2f2f2;
            }
            td {
                height: 100px;
                vertical-align: top;
            }
        </style>
    </head>
    <body>
        <h1>Shift Availability Schedule</h1>
        <table>
            <tr>
                <th>Monday</th>
                <th>Tuesday</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
                <th>Saturday</th>
                <th>Sunday</th>
            </tr>
            <tr>
    """

    # Add schedule data for each day
    for day in range(1, 8):
        morning_shift = schedule[day]["7:00AM - 1:00PM"]
        afternoon_shift = schedule[day]["1:00PM - 7:00PM"]
        html_schedule += f"<td><b>Morning:</b> {morning_shift}<br><b>Afternoon:</b> {afternoon_shift}</td>"

    # Close HTML structure
    html_schedule += """
            </tr>
        </table>
    </body>
    </html>
    """

    # Save the HTML content to a file
    with open("shift_schedule.html", "w") as file:
        file.write(html_schedule)

    print("The HTML shift schedule has been successfully generated and saved!")
    print("Welcome to the Shift Availability Scheduler!")

    # Step 1: Create a default schedule
    schedule = create_default_schedule()

    # Step 2: Allow user to update the schedule
    print("\nSet your availability for each shift (7:00AM - 1:00PM and 1:00PM - 7:00PM).")
    print("Availability options: 'preferred', 'available', 'unavailable'.")
    schedule = update_schedule(schedule)

    # Step 3: Generate and save the schedule as an HTML file
    save_schedule_as_html(schedule)


# Main program workflow
if __name__ == "__main__":
